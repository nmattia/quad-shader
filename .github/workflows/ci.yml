# Simple workflow for deploying static content to GitHub Pages
# Adapted from https://github.com/actions/deploy-pages/blob/b74272834adc04f971da4b0b055c49fa8d7f90c9/README.md#usage
name: Deploy static content to Pages

on:
  # Runs on pushes
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build the app & lib and save as artifacts
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        # Here we set an empty base, which makes vite produce links that are relative
        # to the assets, as opposed to expecting all assets to be served from `/`.
        run: npm ci && npm run build -- --base ''
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/pages' # vite's outDir as specified in package.json

        # build the .tgz in ./out and upload as artifact
      - name: Build library
        run: mkdir -p ./out && npm pack --pack-destination ./out
      - name: Upload lib artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './out'
          name: lib


  # Single deploy job since we're just deploying
  deploy:
    needs: build
    if: github.ref_name == github.event.repository.default_branch
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
